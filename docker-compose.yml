version: '3.8'

services:
  db:
    image: postgres:14
    container_name: postgres_SCD
    restart: no
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=CSW
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d CSW"]
      interval: 2s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: SCD_backend
    restart: no
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=CSW
      - POSTGRES_PORT=5432
      - POSTGRESQL_DB_URL=postgresql+asyncpg://postgres:password@db:5432/CSW
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: SCD_frontend
    restart: no
    ports:
      - "3000:80"  # Изменено с 3000:3000 на 3000:80, так как nginx слушает на 80 порту
    # УБРАТЬ volumes которые перезаписывают /app
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    name: SCD_postgres_data